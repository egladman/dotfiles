# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

# Hack: Setting this to zero hides the title bar
font pango:monospace 0

default_border pixel 2
hide_edge_borders smart

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex-autostart --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --image=$HOME/.config/backgrounds/stardust-nord.png --tiling --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Bluetooth
exec --no-startup-id blueman-applet

# Music player daemon
exec --no-startup-id mpd

# Remap default keyboard modifers
exec --no-startup-id "xmodmap $HOME/.Xmodmap"

# Set background color
#exec_always --no-startup-id xsetroot -solid "#4C566A"

# TODO use autorandr post switch? 
exec_always --no-startup-id autorandr --change && feh --no-xinerama --bg-tile $HOME/.config/backgrounds/stardust-nord.png

# Run emacs daemon
exec --no-startup-id emacs --daemon=$TMPDIR/emacs.socket

# 
exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=secrets

# Screen compositor
exec_always --no-startup-id picom

# Polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Use non-standard mod key
set $mod Mod4

# Toggle screen compositor on/off
bindsym $mod+Shift+p exec $HOME/.config/i3-helpers/picom-toggle.sh

# Use pactl to adjust volume in Phttps://unsplash.com/photos/4u2U8EO9OzYhttps://unsplash.com/photos/4u2U8EO9OzYulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up l
set $down k
set $left j
set $right semicolon

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# Launch monitor configuration gui
bindsym $mod+p exec arandr

# Launch audio configuration gui
bindsym $mod+o exec pavucontrol

# Launch file explorer
bindsym $mod+period exec nautilus

# Lock screen
bindsym $mod+Shift+i exec loginctl lock-session

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# By default, dmenu calculates its height as the height of the font used plus 2. There exists a line height patch,
# I'm just lazy and manually calculating polybar's height given Fira Code's font size. List all available fonts with command: fc-list
# https://tools.suckless.org/dmenu/patches/line-height/
bindsym $mod+a exec --no-startup-id dmenu_run -fn 'Fira Code:style=Regular:pixelsize=17' -nb '#2E3440' -nf '#D8DEE9' -sb '#8FBCBB' -sf '#D8DEE9'

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+m focus parent

# focus the child container
bindsym $mod+n focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:I"
set $ws2 "2:II"
set $ws3 "3:III"
set $ws4 "4:IV"
set $ws5 "5:V"
set $ws6 "6:VI"
set $ws7 "7:VII"
set $ws8 "8:VIII"
set $ws9 "9:IX"
set $ws10 "10:X"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or Mod1+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Move a workspace to another monitor (multi monitor setup)
#   Original Idea: https://gist.github.com/magujs/f8060343b9aedc7e6514
mode "move_workspace" {
        # Vim bindings
        bindsym $up move workspace to output up
        bindsym $down move workspace to output down
        bindsym $left move workspace to output left
        bindsym $right move workspace to output right

        # arrow-keys bindings
        bindsym Up move workspace to output up
        bindsym Down move workspace to output down
        bindsym Left move workspace to output left
        bindsym Right move workspace to output right

        # back to normal: Enter or Escape or Mod1+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+x mode "default"
}

bindsym $mod+x mode "move_workspace"

# class                 border  backgr. text    indicator child_border
client.focused          #434C5E #434C5E #ffffff #2e9ef4   #EBCB8B
client.focused_inactive #434C5E #434C5E #ffffff #484e50   #4C566A
client.unfocused        #434C5E #434C5E #ffffff #292d2e   #2E3440
client.urgent           #2f343a #434C5E #ffffff #900000   #BF616A
client.placeholder      #434C5E #434C5E #ffffff #000000   #ECEFF4

# Run xprop to determine window names
for_window [class="Arandr"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [floating] move position center
